@page "/productdetails/{id:int}"
@inject ProductService ProductService
@inject UserStateService UserStateService

<h3>Product Details</h3>

@if (Product == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h4>@Product.Name</h4>
    <p>@Product.Description</p>
    <p>Price: @Product.Price @Product.Currency</p>
    <p>Stock: @Product.Stock</p>
    <button class="btn btn-primary" @onclick="AddToCart">Add to Cart</button>
}

@code {
    [Parameter] public int id { get; set; }
    private Product Product;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Product = await ProductService.GetProduct(id);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading product details: {ex.Message}");
        }
    }

    private async Task AddToCart()
    {
        try
        {
            var userId = UserStateService.GetCurrentUserId();

            // Проверяем, что Product и его Id не null
            if (Product.Id != null)
            {
                await ProductService.AddToCart(userId, (int)Product.Id); // Приводим Id к int
            }
            else
            {
                Console.WriteLine("Product ID is null. Cannot add to cart.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error adding to cart: {ex.Message}");
        }
    }
}
