@page "/register"
@inject UserService UserService
@inject UserStateService UserStateService
@inject NavigationManager NavigationManager

<h3>Register</h3>

<div>
    <label>Username:</label>
    <input @bind="Username" />
</div>
<div>
    <label>Password:</label>
    <input type="password" @bind="Password" />
</div>
<div>
    <label>Email:</label>
    <input @bind="Email" />
</div>
<button @onclick="Register">Register</button>

<p>@Message</p>

@code {
    private string Username;
    private string Password;
    private string Email; // Added Email field
    private string Message;

    private async Task Register()
    {
        try
        {
            // Create a User object with the necessary properties for registration
            var newUser = new User
                {
                    Username = Username,
                    Password = Password, // Ideally this should be hashed by the server
                    Email = Email
                };

            var user = await UserService.Register(newUser);

            if (user != null)
            {
                UserStateService.SetCurrentUserId(user.Id);
                NavigationManager.NavigateTo("/products");
            }
            else
            {
                Message = "Registration failed.";
            }
        }
        catch (Exception ex)
        {
            Message = $"Registration failed: {ex.Message}";
        }
    }
}
